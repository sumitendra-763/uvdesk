<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'uvdesk.automations.prepared_responses' shared autowired service.

include_once $this->targetDirs[3].'\\vendor\\uvdesk\\automation-bundle\\EventListener\\PreparedResponseListener.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\automation-bundle\\PreparedResponse\\Action.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Agent\\MailAgent.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Agent\\TransferTickets.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Customer\\MailCustomer.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\AddNote.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\Delete.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\MailAgent.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\MailCustomer.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\MailGroup.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\MailLastCollaborator.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\MailTeam.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\MarkSpam.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdateAgent.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdateGroup.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdatePriority.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdateStatus.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdateTag.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdateTeam.php';
include_once $this->targetDirs[3].'\\vendor\\uvdesk\\core-framework\\PreparedResponse\\Actions\\Ticket\\UpdateType.php';

$a = ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService());

$this->services['uvdesk.automations.prepared_responses'] = $instance = new \Webkul\UVDesk\AutomationBundle\EventListener\PreparedResponseListener($this, $a);

$b = ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()));

$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\MailAgent($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Agent\TransferTickets($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Customer\MailCustomer($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\AddNote($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\Delete($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailAgent($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailCustomer($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailGroup($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailLastCollaborator($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MailTeam($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\MarkSpam($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateAgent($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateGroup($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdatePriority($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateStatus($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTag($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateTeam($this, $b, $a));
$instance->registerPreparedResponseAction(new \Webkul\UVDesk\CoreFrameworkBundle\PreparedResponse\Actions\Ticket\UpdateType($this, $b, $a));

return $instance;
